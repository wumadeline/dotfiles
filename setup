#!/bin/zsh -x

install_or_update_homebrew () {
  # Check for Homebrew and install if we don't have it
  if test ! $(which brew); then
    echo "Installing Homebrew..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    # Add homebrew to PATH
    echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> $HOME/.zprofile
    eval "$(/opt/homebrew/bin/brew shellenv)"
  else
    # Update Homebrew recipes
    brew update
  fi
}

install_brewfile () {
  echo "â€º brew bundle"
  brew bundle
}

install_oh_my_zsh () {
  # Install oh-my-zsh
  export ZSH="$HOME/.oh-my-zsh"

  if [ ! -d $ZSH ]; then
    echo "Installing oh-my-zsh"
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
  fi
}

install_oh_my_zsh_plugins () {
  export ZSH_CUSTOM="$ZSH/custom"
  # Install zsh-autosuggestions
  if [ ! -d ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions ]; then
    echo "Installing zsh-autosuggestions..."
    git clone https://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions
  fi
}

setup_pyenv () {
  if command -v pyenv 1>/dev/null 2>&1; then
    eval "$(pyenv init --path)"
    eval "$(pyenv init -)"
  fi
}

setup_neovim () {
  # set up python3 from neovim
  # in nvim/init.lua, `g.python3_host_prog` will be set to "~/.pyenv/versions/neovim/bin/python3"
  pyenv virtualenvs | grep -q "neovim"
  if [[ ! `pyenv virtualenvs | grep "neovim"` ]]; then
    pyenv virtualenv neovim
    echo "created virtualenv neovim for python3 installation"
    if pyenv activate neovim; then
      pip install pynvim neovim
      pyenv deactivate
      echo "installed python3 dependencies for neovim"
    else
      echo "failed to activate neovim virtualenv"
    fi
  else
    echo "skipping neovim python3 setup, virtualenv already exists"
  fi
}

# Set up git
prompt_for_git_config () {
    option=$1
    prompt="$2"

    if [[ ! `git config --global $option` ]]; then
        read -p "$prompt: " item
        git config --global $option "$item"
    fi
}

# Set up custom themes for bat
# Used for sublime and fzf preview windows
configure_bat () {
  # Create config folder
  mkdir -p ~/.config/bat
  cd ~/.config/bat
  
  if [ ! -d themes ]; then
    mkdir themes
    # Download all Base2Tone themes
    git clone https://github.com/atelierbram/Base2Tone-sublime-text themes
  fi

  # Update the binary cache
  bat cache --build
}


configure_git () {
    if [ ! -f .gitconfig ]; then
      echo "Configuring git..."
      prompt_for_git_config user.name "Enter your username"
      prompt_for_git_config user.email "Enter your email"
      git config --global core.excludesfile "$HOME/.gitignore_global"
    fi
}

main () {
  echo "Setting up your Mac..."
  install_or_update_homebrew
  install_brewfile
  configure_bat
  install_oh_my_zsh
  install_oh_my_zsh_plugins
  setup_pyenv
  setup_neovim
  configure_git
  echo "Completed Mac set up!"
}

if [[ "${BASH_SOURCE[0]}" = "$0" ]]; then
    if [[ "debug" = $1 ]]; then
        DEBUG=1
    else
        DEBUG=0
    fi

    main "$@"
fi
